# Generated by Django 4.2 on 2025-05-27 17:24

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CanalVenda',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Parceiro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=50, unique=True)),
                ('parceiro', models.CharField(max_length=255)),
                ('classificacao', models.CharField(blank=True, max_length=100, null=True)),
                ('consultor', models.CharField(blank=True, max_length=100, null=True)),
                ('unidade', models.CharField(blank=True, max_length=100, null=True)),
                ('cidade', models.CharField(blank=True, max_length=100, null=True)),
                ('uf', models.CharField(blank=True, max_length=2, null=True)),
                ('primeiro_fat', models.DateField(blank=True, null=True)),
                ('ultimo_fat', models.DateField(blank=True, null=True)),
                ('janeiro', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True)),
                ('fevereiro', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True)),
                ('marco', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True)),
                ('abril', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True)),
                ('maio', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True)),
                ('junho', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True)),
                ('julho', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True)),
                ('agosto', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True)),
                ('setembro', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True)),
                ('outubro', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True)),
                ('novembro', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True)),
                ('dezembro', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True)),
                ('janeiro_2', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True)),
                ('fevereiro_2', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True)),
                ('marco_2', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True)),
                ('total_geral', models.DecimalField(decimal_places=2, default=0, max_digits=14)),
                ('recorrencia', models.CharField(blank=True, max_length=50, null=True)),
                ('tm', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('canal_venda', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parceiros', to='usuarios.canalvenda')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_user', models.CharField(choices=[('VENDEDOR', 'Vendedor'), ('GESTOR', 'Gestor'), ('ADMIN', 'Administrador')], default='VENDEDOR', max_length=10)),
                ('id_vendedor', models.CharField(blank=True, max_length=20, null=True)),
                ('primeiro_acesso', models.BooleanField(default=True)),
                ('canais_venda', models.ManyToManyField(blank=True, related_name='usuarios', to='usuarios.canalvenda')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
